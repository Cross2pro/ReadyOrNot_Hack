#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x3B8 (0xC50 - 0x898)
// WidgetBlueprintGeneratedClass W_Loadout_V2.W_Loadout_V2_C
class UW_Loadout_V2_C : public ULoadout_V2
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0x898(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                BackgroundGradient;                                // 0x8A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_C*                    CustomizationWidget;                               // 0x8A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                Img_ClickToRotate;                                 // 0x8B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                Img_ClickToRotate_DragArea;                        // 0x8B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                          LoadoutCanvas;                                     // 0x8C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActivatableWidgetSwitcher*      LoadoutCustomizationSwitcher;                      // 0x8C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActivatableWidgetSwitcher*      LoadoutInfoSwitcher;                               // 0x8D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                          MainCanvas;                                        // 0x8D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PageWrapper_C*                      PageHeader;                                        // 0x8E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActivatableWidgetStack*         PresetPreviewStack;                                // 0x8E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_LoadoutInformationBox_C*            W_LoadoutInformationBox;                           // 0x8F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PresetPreview_Gamepad_C*            W_PresetPreview_Gamepad;                           // 0x8F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UClass*                                ItemData;                                          // 0x900(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	enum class EItemType                         EquippingItemType;                                 // 0x908(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                        Pad_3D14[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPrimaryWeaponEquipped;                           // 0x910(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            OnSidearmWeaponEquipped;                           // 0x920(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            OnArmorMaterialEquipped;                           // 0x930(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                  HoveredPreset;                                     // 0x940(0x18)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ACameraActor*                          WorkbenchCamera;                                   // 0x958(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FRotator                              DefaultWorkbenchCameraRotation;                    // 0x960(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FRotator                              CurrentWorkbenchCameraRotation;                    // 0x978(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FRotator                              TargetWorkbenchCameraRotation;                     // 0x990(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FRotator                              WorkbenchCameraRotation;                           // 0x9A8(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                         bWorkbenchCameraRotating;                          // 0x9C0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                         bUseGamepad;                                       // 0x9C1(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                        Pad_3D18[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnChangedInput;                                    // 0x9C8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMap<class FName, class UClass*>             PageMap;                                           // 0x9D8(0x50)(Edit, BlueprintVisible)
	TMap<class FName, class UClass*>             PageMap_Gamepad;                                   // 0xA28(0x50)(Edit, BlueprintVisible)
	class UCommonActivatableWidget*              CurrentPage;                                       // 0xA78(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class FName                                  CurrentPageID;                                     // 0xA80(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	TMap<class FName, class FName>               Page_to_Camera_Tag_Map;                            // 0xA88(0x50)(Edit, BlueprintVisible)
	TMap<class FName, class FString>             Page_to_Pose_Tag_Map;                              // 0xAD8(0x50)(Edit, BlueprintVisible)
	bool                                         bCustomization;                                    // 0xB28(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         bOpenedInCustomization;                            // 0xB29(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_3D1A[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, class FText>               MainNavigationOptions;                             // 0xB30(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                  MainNavSelection;                                  // 0xB80(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_StandardModal_C*                    PresetModal;                                       // 0xB88(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                        PresetCharacterLimit;                              // 0xB90(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_3D1B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPresetModified;                                  // 0xB98(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                         bIsRotating;                                       // 0xBA8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_3D1C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       MouseDragRotateSpeed;                              // 0xBB0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            OnSaveModifiedPresetClicked;                       // 0xBB8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            OnPresetSelected;                                  // 0xBC8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                         Editing_Preset_Name;                               // 0xBD8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	enum class EWeaponAttachmentType             HoveredAttachmentType;                             // 0xBD9(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_3D1D[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UW_LoadoutSlot_v2_C*                   HoveredAttachmentSlot;                             // 0xBE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                         bShowingWeaponClassNav;                            // 0xBE8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_3D1F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, class UFMODEvent*>         Page_to_FMOD_Tag_Map;                              // 0xBF0(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                PresetToDelete;                                    // 0xC40(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

	static class UClass* StaticClass();
	static class UW_Loadout_V2_C* GetDefaultObj();

	void BackPage(bool* Handled, class UCommonActivatableWidget* CallFunc_GetActiveWidget_ReturnValue, class UW_Overview_V2_C* K2Node_DynamicCast_AsW_Overview_V2, bool K2Node_DynamicCast_bSuccess, bool CallFunc_BackPage_Handled, TScriptInterface<class IReadyOrNotUI_C> K2Node_DynamicCast_AsReady_or_Not_UI, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_BackPage_Handled_1, class UCommonActivatableWidget* CallFunc_GetActiveWidget_ReturnValue_1);
	void GetFocusTarget(class UWidget** Focus);
	void NVG_StyleHovered(enum class ENVGStyle ArmorMaterial);
	void Is_Default_Preset(class FText& Name, bool* Default, class FText CallFunc_MakeLiteralText_ReturnValue, bool CallFunc_TextIsEmpty_ReturnValue, bool CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);
	void EditCustomizationPresetName(class UW_StandardModal_C* Preset_Customization_Modal, class FText TextEntry, const struct FSavedLoadout& CurrentLoadout, const class FString& PresetName, bool Overwriting, bool ConfirmOverwrite, const class FString& CallFunc_Conv_TextToString_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue_1, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue_1, const class FString& CallFunc_Conv_TextToString_ReturnValue_2, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue_2, bool CallFunc_Check_Default_Preset_Valid, TArray<class FString>& CallFunc_GetCustomizationPresetNames_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue);
	void Refresh_Customization_Preset_Page(const class FString& Preset_Name);
	void EditLoadoutPresetName(class UW_StandardModal_C* TriggeringModal, class FText TextEntry, class ULoadoutManager* Loadout_Function_Library, const struct FSavedLoadout& CurrentLoadout, const class FString& PresetName, bool Overwriting, bool ConfirmOverwrite, const class FString& CallFunc_Conv_TextToString_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue_1, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, bool CallFunc_Check_Default_Preset_Valid, const class FString& CallFunc_Conv_TextToString_ReturnValue_2, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue_1, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue_2, TArray<class FString>& CallFunc_GetAllPresetNames_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue);
	void Refresh_Preset_Page(class UW_StandardModal_C* Triggering_Modal, const class FString& Preset_Name, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, class UW_Loadout_Page_Preset_C* K2Node_DynamicCast_AsW_Loadout_Page_Preset, bool K2Node_DynamicCast_bSuccess);
	void Check_Default_Preset(const class FString& Preset_Name, bool* Valid, bool CallFunc_NotEqual_StriStri_ReturnValue);
	void Validate_Max_Character_Preset(const class FString& Preset_Name, class UW_StandardModal_C* Triggering_Modal, int32 CallFunc_Len_ReturnValue, int64 CallFunc_Conv_IntToInt64_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue);
	void Validate_Min_Character_Preset(class UW_StandardModal_C* Triggering_Modal, const class FString& Preset_Name, bool CallFunc_IsEmpty_ReturnValue, int32 CallFunc_MakeLiteralInt_ReturnValue, int64 CallFunc_Conv_IntToInt64_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue);
	void Bind_Loadout_Events(class UW_StandardModal_C* Preset_Modal, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1);
	void Bind_Customization_Events(class UW_StandardModal_C* Preset_Modal, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1);
	class FText Get_Entry_Text_For_Current_Preset(const class FString& Current_Preset, bool Customization, bool New_Preset, bool Temp_bool_Variable, TArray<class FString>& CallFunc_Get_All_Preset_Names_ReturnValue, class FText Temp_text_Variable, bool Temp_bool_Variable_1, class FText Temp_text_Variable_1, bool CallFunc_Array_Contains_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, class FText K2Node_Select_Default, class FText K2Node_Select_Default_1);
	TArray<class FString> Get_All_Preset_Names(bool Customization, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue_1, TArray<class FString>& CallFunc_GetCustomizationPresetNames_ReturnValue, TArray<class FString>& CallFunc_GetAllPresetNames_ReturnValue);
	class FText Get_Default_New_Preset_Name(bool Customization, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue_1, class FText CallFunc_GetDefaultCustomizationPresetName_ReturnValue, class FText CallFunc_GetDefaultPresetName_ReturnValue);
	class FText Get_Entry_Initial_Text_Value(const class FString& Current_Preset, bool Customization, bool New_Preset, class FText Entry_Text_For_Current_Preset, class FText CallFunc_Get_Entry_Text_For_Current_Preset_ReturnValue, class FText CallFunc_Get_Default_New_Preset_Name_ReturnValue, bool CallFunc_TextIsEmpty_ReturnValue);
	double Calculate_Gamepad_Rotation_Speed(double X, double Max_Gamepad_Rotate_Speed, double CallFunc_Abs_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue);
	struct FEventReply Rotate_Character(double X, double Rotate_speed, const struct FEventReply& CallFunc_Handled_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, float CallFunc_RotateLoadoutCharacter_InRotation_ImplicitCast);
	struct FEventReply OnAnalogValueChanged(const struct FGeometry& MyGeometry, const struct FAnalogInputEvent& InAnalogInputEvent, const struct FEventReply& CallFunc_Unhandled_ReturnValue, float CallFunc_GetAnalogValue_ReturnValue, double CallFunc_Calculate_Gamepad_Rotation_Speed_ReturnValue, const struct FKeyEvent& CallFunc_GetKeyEventFromAnalogInputEvent_ReturnValue, const struct FEventReply& CallFunc_Rotate_Character_ReturnValue, const struct FKey& CallFunc_GetKey_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, double CallFunc_Rotate_Character_X_ImplicitCast, double CallFunc_Calculate_Gamepad_Rotation_Speed_X_ImplicitCast);
	void Refresh_Attachments(bool Primary, enum class EWeaponAttachmentType Attachment_Type, class UW_LoadoutSlot_v2_C* Attachment_Slot, bool Temp_bool_Variable, class UW_Loadout_Page_Weapon_C* K2Node_DynamicCast_AsW_Loadout_Page_Weapon, bool K2Node_DynamicCast_bSuccess, class UW_Loadout_Page_WeaponEdit_C* K2Node_Select_Default, class UWeaponAttachment* CallFunc_GetCurrentAttachmentByType_ReturnValue);
	void Clear_Attachment_For_Category(enum class EWeaponAttachmentType Attachment_Type, bool Primary, class UClass* Null_Attachment, class UClass* CallFunc_Get_Null_Attachment_By_Type_NullAttachment, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue);
	void Clear_Attachment_Clicked(bool Secondary, enum class EWeaponAttachmentType AttachmentType, bool Primary, class UClass* NullAttachment, class UClass* CallFunc_Get_Null_Attachment_By_Type_NullAttachment, bool CallFunc_NotEqual_BoolBool_ReturnValue, class UW_Loadout_Page_Weapon_C* K2Node_DynamicCast_AsW_Loadout_Page_Weapon, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsPrimaryActiveTab_Active);
	void Hide_Clear_Attachment_Footer_Option();
	void Unhide_Clear_Attachment_Footer_Option(bool CallFunc_CheckOverviewIsActive_True);
	void Get_Null_Attachment_By_Type(enum class EWeaponAttachmentType Selection, class UClass** NullAttachment, bool K2Node_SwitchEnum_CmpSuccess);
	void Unhide_Clear_All_Attachments_Footer_Option();
	void Hide_Clear_All_Attachments_Footer_Option();
	void Clear_All_Attachments_Clicked(enum class EWeaponAttachmentType AttachmentType, bool Primary, class UClass* NullAttachment, int32 Temp_int_Array_Index_Variable, bool Temp_bool_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, bool Temp_bool_Variable_1, bool CallFunc_NotEqual_BoolBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, class UW_Loadout_Page_Weapon_C* K2Node_DynamicCast_AsW_Loadout_Page_Weapon, bool K2Node_DynamicCast_bSuccess, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, TSubclassOf<class ABaseWeapon> CallFunc_GetActivePrimary_ReturnValue, class UW_Loadout_Page_WeaponEdit_C* K2Node_Select_Default, TSubclassOf<class ABaseWeapon> CallFunc_GetActiveSecondary_ReturnValue, bool CallFunc_IsPrimaryActiveTab_Active, TArray<class UW_LoadoutSlot_v2_C*>& CallFunc_WidgetGetChildrenOfClass_ChildWidgets, class UW_LoadoutSlot_v2_C* CallFunc_Array_Get_Item, TSubclassOf<class ABaseWeapon> K2Node_Select_Default_1, TArray<enum class EWeaponAttachmentType>& CallFunc_GetAvailableAttachmentTypesByWeapon_ReturnValue, class UClass* CallFunc_Get_Null_Attachment_By_Type_NullAttachment, enum class EWeaponAttachmentType CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1);
	void Revert_Loadout_Preset(const struct FSavedLoadout& Temp_struct_Variable, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, class UCommonActivatableWidget* CallFunc_GetActiveWidget_ReturnValue, class UW_Overview_V2_C* K2Node_DynamicCast_AsW_Overview_V2, bool K2Node_DynamicCast_bSuccess, class FText CallFunc_GetCurrentPresetDisplayName_ReturnValue, bool CallFunc_Is_Default_Preset_Default, const class FString& CallFunc_Conv_TextToString_ReturnValue);
	void Revert_Customization_Preset(class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, const class FString& CallFunc_GetCurrentCustomizationPresetName_ReturnValue);
	void Refresh_Preset_Preview(const struct FSavedLoadout& Hovered_Loadout, const class FString& CallFunc_Conv_TextToString_ReturnValue, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, bool CallFunc_EqualEqual_StriStri_ReturnValue, const struct FSavedLoadout& CallFunc_GetActiveLoadout_ReturnValue, const struct FSavedLoadout& CallFunc_GetDefaultPreset_ReturnValue, const struct FSavedLoadout& CallFunc_GetPreset_ReturnValue, bool CallFunc_IsEmpty_ReturnValue);
	void Edit_Preset_Name_Clicked(const struct FVector2D& Temp_struct_Variable, class FText Temp_text_Variable, class FText Temp_text_Variable_1, class FText Temp_text_Variable_2, const struct FAnchors& K2Node_MakeStruct_Anchors, class UW_StandardModal_C* CallFunc_Create_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, bool CallFunc_NotEqual_StrStr_ReturnValue, class UCanvasPanelSlot* CallFunc_AddChildToCanvas_ReturnValue);
	void Delete_Preset_Clicked(class UW_StandardModal_C* DeletePresetModal, class FText Temp_text_Variable, const struct FAnchors& K2Node_MakeStruct_Anchors, class UW_StandardModal_C* CallFunc_Create_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_2, class UCanvasPanelSlot* CallFunc_AddChildToCanvas_ReturnValue, const struct FVector2D& Temp_struct_Variable, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue);
	void Revert_Preset_Clicked();
	void Save_Preset_Clicked(class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, const class FString& CallFunc_GetCurrentCustomizationPresetName_ReturnValue, class FText CallFunc_GetCurrentPresetDisplayName_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, class UW_StandardModal_C* CallFunc_OpenPresetSaveModal_Preset_Modal);
	void Unhide_Loadout_Preset_Footer_Options();
	void Hide_Loadout_Preset_Footer_Options();
	void Hide_Preset_Page_Footer_Options();
	void Unhide_Preset_Page_Footer_Options(bool CallFunc_CheckOverviewIsActive_True, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);
	struct FUIInputConfig BP_GetDesiredInputConfig(const struct FUIInputConfig& K2Node_MakeStruct_UIInputConfig);
	struct FEventReply Mouse_StartRotation(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent, const struct FEventReply& CallFunc_Handled_ReturnValue);
	struct FEventReply OnMouseMove(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent, const struct FVector2D& CallFunc_PointerEvent_GetCursorDelta_ReturnValue, const struct FEventReply& CallFunc_Unhandled_ReturnValue, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, const struct FEventReply& CallFunc_Rotate_Character_ReturnValue);
	struct FEventReply OnMouseButtonUp(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent, const struct FEventReply& CallFunc_Handled_ReturnValue);
	void DeleteCustomizationPreset(class UW_StandardModal_C* TriggeringModal, class FText TextEntry, const struct FSavedLoadout& CurrentLoadout, const class FString& PresetName, bool Overwriting, bool ConfirmOverwrite, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, bool CallFunc_IsEmpty_ReturnValue, bool CallFunc_NotEqual_StrStr_ReturnValue);
	void SaveCustomizationPreset(class UW_StandardModal_C* Preset_Customization_Modal, class FText TextEntry, const struct FSavedLoadout& CurrentLoadout, const class FString& PresetName, bool Overwriting, bool ConfirmOverwrite, const class FString& CallFunc_Conv_TextToString_ReturnValue, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue_1, bool CallFunc_Check_Default_Preset_Valid, TArray<class FString>& CallFunc_GetCustomizationPresetNames_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue);
	void OpenCustomizationPresetSaveModal(const class FString& CurrentPreset, bool bDelete, bool New, class FText Temp_text_Variable, bool Temp_bool_Variable, class FText CallFunc_Get_Entry_Initial_Text_Value_ReturnValue, bool Temp_bool_Variable_1, class FText Temp_text_Variable_1, class FText Temp_text_Variable_2, const struct FAnchors& K2Node_MakeStruct_Anchors, class UW_StandardModal_C* CallFunc_Create_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, class FText K2Node_Select_Default, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, class FText CallFunc_Conv_StringToText_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, const struct FVector2D& Temp_struct_Variable, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_2, FDelegateProperty_ K2Node_Select_Default_1, class UCanvasPanelSlot* CallFunc_AddChildToCanvas_ReturnValue);
	void AmmoHovered(class FName AmmoName, class FText CategoryText);
	void ClosePresetPreview(class UCommonActivatableWidget* CallFunc_GetActiveWidget_ReturnValue, class UW_Loadout_Preset_Preview_C* K2Node_DynamicCast_AsW_Loadout_Preset_Preview, bool K2Node_DynamicCast_bSuccess);
	void PreviewPreset(const struct FSavedLoadout& PreviewLoadout, class UW_Loadout_Preset_Preview_C* CallFunc_BP_AddWidget_ReturnValue, class UCommonActivatableWidget* CallFunc_GetActiveWidget_ReturnValue, class UW_Loadout_Preset_Preview_C* K2Node_DynamicCast_AsW_Loadout_Preset_Preview, bool K2Node_DynamicCast_bSuccess);
	void PresetModified(bool PresetDirty);
	void CancelSavePreset(class UStandardModal* CallingModal);
	void DeleteLoadoutPreset(class UW_StandardModal_C* TriggeringModal, class FText TextEntry, const struct FSavedLoadout& CurrentLoadout, const class FString& PresetName, bool Overwriting, bool ConfirmOverwrite, class UW_Loadout_Page_Preset_C* K2Node_DynamicCast_AsW_Loadout_Page_Preset, bool K2Node_DynamicCast_bSuccess, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, bool CallFunc_IsEmpty_ReturnValue, bool CallFunc_NotEqual_StrStr_ReturnValue);
	void SaveLoadoutPreset(class UW_StandardModal_C* Preset_Loadout_Modal, class FText TextEntry, class ULoadoutManager* Loadout_Function_Library, const struct FSavedLoadout& CurrentLoadout, const class FString& PresetName, bool Overwriting, bool ConfirmOverwrite, const class FString& CallFunc_Conv_TextToString_ReturnValue, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, bool CallFunc_Check_Default_Preset_Valid, const class FString& CallFunc_Conv_TextToString_ReturnValue_1, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue_1, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue_2, TArray<class FString>& CallFunc_GetAllPresetNames_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, bool CallFunc_Array_Contains_ReturnValue, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue);
	void OpenPresetSaveModal(const class FString& CurrentPreset, bool bDelete, bool New, class UW_StandardModal_C** Preset_Modal, bool Temp_bool_Variable, class FText CallFunc_Get_Entry_Initial_Text_Value_ReturnValue, bool Temp_bool_Variable_1, class FText Temp_text_Variable, class FText Temp_text_Variable_1, const struct FAnchors& K2Node_MakeStruct_Anchors, class UW_StandardModal_C* CallFunc_Create_ReturnValue, class FText Temp_text_Variable_2, bool CallFunc_Not_PreBool_ReturnValue, class FText K2Node_Select_Default, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, class FText CallFunc_Conv_StringToText_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, const struct FVector2D& Temp_struct_Variable, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_2, FDelegateProperty_ K2Node_Select_Default_1, class UCanvasPanelSlot* CallFunc_AddChildToCanvas_ReturnValue);
	void ShowMainNav();
	void ShowWeaponClassNav(enum class EItemClass SelectedClass, bool bIsSecondary, bool bShowLessLethal, enum class EItemClass NewCategory, TSet<enum class EItemClass> SecondaryClasses, TMap<class FName, class FText> TempOptionMap, TSet<enum class EItemClass> PrimaryClasses, bool Temp_bool_Variable, int32 Temp_int_Variable, int32 Temp_int_Variable_1, uint8 CallFunc_Conv_IntToByte_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, uint8 CallFunc_GetValidValue_ReturnValue, uint8 CallFunc_Conv_IntToByte_ReturnValue_1, uint8 CallFunc_GetEnumeratorValueFromIndex_ReturnValue, int32 CallFunc_Conv_ByteToInt_ReturnValue, TSet<enum class EItemClass> K2Node_MakeVariable_MakeVariableOutput, TSet<enum class EItemClass> K2Node_MakeVariable_MakeVariableOutput_1, int32 CallFunc_MakeLiteralInt_ReturnValue, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, class FText CallFunc_GetItemClassText_Category_Text, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1, class FName CallFunc_Conv_StringToName_ReturnValue_1, TSet<enum class EItemClass> K2Node_Select_Default, bool CallFunc_Set_Contains_ReturnValue);
	class UWidget* BP_GetDesiredFocusTarget(class UWidget* CallFunc_GetFocusTarget_Focus);
	void SetCameraAndPose(class FName CameraTag, const class FString& PoseTag, double BlendTime, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, bool CallFunc_IsEmpty_ReturnValue, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue_1, float CallFunc_SetActiveCameraByTag_BlendTime_ImplicitCast);
	void SetCameraAndPoseByPageID(class FName PageNameID, double BlendTime, class UFMODEvent* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, class FName CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, const class FString& CallFunc_Map_Find_Value_2, bool CallFunc_Map_Find_ReturnValue_2, float CallFunc_SetActiveCameraByTag_BlendTime_ImplicitCast);
	void SlotUnhovered();
	void ArmorMaterialHovered(class UArmourMaterial* ArmorMaterial, bool CallFunc_IsValid_ReturnValue);
	void AttachmentHovered(class UWeaponAttachment* Attachment, enum class EWeaponAttachmentType AttachmentType, class FText CallFunc_GetAttachmentSlotText_SlotText, bool CallFunc_IsValid_ReturnValue);
	void ItemHovered(class ABaseItem* BaseItem, class FText CategoryText, bool CallFunc_IsValid_ReturnValue);
	void WeaponHovered(class ABaseWeapon* BaseWeaponItem, bool Secondary, class FText Temp_text_Variable, bool CallFunc_IsValid_ReturnValue, class FText Temp_text_Variable_1, bool Temp_bool_Variable, class FText K2Node_Select_Default, class UClass* CallFunc_GetClassFromObject_ReturnValue, class UClass* K2Node_ClassDynamicCast_AsBase_Weapon, bool K2Node_ClassDynamicCast_bSuccess);
	bool BP_OnHandleBackAction(bool CallFunc_BackPage_Handled);
	void CheckOverviewIsActive(bool* TURR, class UOverview_V2* K2Node_DynamicCast_AsOverview_V2, bool K2Node_DynamicCast_bSuccess);
	void SetCategoryPoses(enum class EItemCategory Temp_byte_Variable, const class FString& Temp_string_Variable, enum class EItemCategory Temp_byte_Variable_1, const class FString& Temp_string_Variable_1, enum class EItemCategory Temp_byte_Variable_2, const class FString& Temp_string_Variable_2, enum class EItemCategory Temp_byte_Variable_3, const class FString& Temp_string_Variable_3);
	void SetCategoryCameraTags(enum class EItemCategory Temp_byte_Variable, class FName Temp_name_Variable, enum class EItemCategory Temp_byte_Variable_1, class FName Temp_name_Variable_1, enum class EItemCategory Temp_byte_Variable_2, class FName Temp_name_Variable_2, enum class EItemCategory Temp_byte_Variable_3, class FName Temp_name_Variable_3, enum class EItemCategory Temp_byte_Variable_4, class FName Temp_name_Variable_4);
	void UpdateAllPreviewWeaponAttachments(bool IsWorkbench, TSubclassOf<class ABaseItem>& Weapon, bool IsSidearm, const struct FSavedLoadout& ActiveLoadout, const TArray<class UClass*>& Attachments, bool Temp_bool_Variable, const struct FSavedWeaponAttachmentData& K2Node_MakeStruct_SavedWeaponAttachmentData, bool CallFunc_EqualEqual_ClassClass_ReturnValue, const struct FSavedWeaponAttachmentData& K2Node_MakeStruct_SavedWeaponAttachmentData_1, bool CallFunc_EqualEqual_ClassClass_ReturnValue_1, bool Temp_bool_Variable_1, bool CallFunc_BooleanOR_ReturnValue, const struct FSavedWeaponAttachmentData& K2Node_Select_Default, bool Temp_bool_Variable_2, int32 Temp_int_Variable, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, int32 Temp_int_Variable_1, const struct FSavedLoadout& CallFunc_GetActiveLoadout_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, class AReadyOrNotPlayerController* CallFunc_GetReadyOrNotPlayerController_ReturnValue, class UWorld* CallFunc_GetWorldBP_ReturnValue, const struct FSavedWeaponAttachmentData& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, class UItemData* CallFunc_GetItemData_ReturnValue, const struct FSavedWeaponAttachmentData& K2Node_MakeStruct_SavedWeaponAttachmentData_2, const struct FSavedWeaponAttachmentData& K2Node_Select_Default_1, const struct FSavedWeaponAttachmentData& K2Node_Select_Default_2, class UClass* K2Node_Select_Default_3);
	void EquipArmourMaterial(class UArmourMaterial* ArmourMaterial);
	void SetPresetModified(bool PresetDirty);
	void OpenItemList(bool VerticalList, enum class EItemCategory LoadoutSlot, TArray<struct FLoadoutCategory>& GearCategoryClasses, class UW_Loadout_Page_ItemList_C* Itemlist);
	void SetPreMissionCameraBySlot(enum class EItemCategory LoadoutSlot, double BlendTime, class FName CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, const class FString& CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1);
	void HolsterPreviewCharacterWeapon(bool* IsHolstering, class AReadyOrNotCharacter* CallFunc_GetDefaultPreviewCharacter_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue, const class FString& CallFunc_GetLastTableMontagePlayed_ReturnValue, class UFMODAudioComponent* CallFunc_PlayEventAttached_ReturnValue, float CallFunc_IsTableMontagePlayingWithTimeRemaining_TimeRemaining, bool CallFunc_IsTableMontagePlayingWithTimeRemaining_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, const class FString& CallFunc_SelectString_ReturnValue, const class FString& CallFunc_SelectString_ReturnValue_1);
	void Reveal(double Delay);
	void Hide(double Delay, bool Collapse);
	void SetInputMode(bool IsGamepad);
	void UpdateActiveLoadout(const struct FSavedLoadout& ActiveLoadout);
	void UpdateCurrentItemMap(TMap<enum class EItemCategory, class UClass*> ItemCategory);
	void HeaderSubpageNavigation(class FName OptionNameID);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void SetPreMissionCamera(class FName Tag, const class FString& Animation, double BlendTime);
	void OnAttachmentSlotClicked(class UClass* Attaching_Weapon, class UClass* Attachment_Data);
	void InputMethodChanged(enum class ECommonInputType bNewInputType);
	void SetCurrentPageID(class FName CurrentPageID);
	void ChangePage(class FName PageName);
	void BndEvt__W_Loadout_V2_Header_K2Node_ComponentBoundEvent_1_OnNavOptionSelected__DelegateSignature(class FName OptionNameID);
	void OpenCustomization();
	void SwitchToLoadout();
	void SwitchToCustomization();
	void BndEvt__W_Loadout_V2_CustomizationWidget_K2Node_ComponentBoundEvent_4_OnCategorySelected__DelegateSignature(class FName CameraTag, const class FString& CharacterPose);
	void BndEvt__W_Loadout_V2_PageHeader_K2Node_ComponentBoundEvent_2_OnFooterButtonClicked__DelegateSignature(const class FString& ButtonId);
	void OnFocusLost(const struct FFocusEvent& InFocusEvent);
	void OnMouseLeave(struct FPointerEvent& MouseEvent);
	void Activate_Preview_Preset_Gamepad();
	void Close_Preview_Preset_Gamepad();
	void PresetOptionHovered(class FText PresetName, bool NewPresetButton);
	void Delete_Preset_Modal_Closed(class UStandardModal* CallingModal);
	void ExecuteUbergraph_W_Loadout_V2(int32 EntryPoint, int32 Temp_int_Array_Index_Variable, bool CallFunc_IsValid_ReturnValue, double K2Node_Event_Delay_1, double K2Node_Event_Delay, bool K2Node_Event_Collapse, bool K2Node_Event_IsGamepad, const struct FSavedLoadout& K2Node_Event_ActiveLoadout, TMap<enum class EItemCategory, class UClass*> K2Node_Event_ItemCategory, class FName K2Node_Event_OptionNameID, bool K2Node_Event_IsDesignTime, class FName K2Node_CustomEvent_Tag, const class FString& K2Node_CustomEvent_Animation, double K2Node_CustomEvent_BlendTime, bool CallFunc_IsEmpty_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, const class FString& CallFunc_SelectString_ReturnValue, bool CallFunc_HolsterPreviewCharacterWeapon_IsHolstering, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_NotEqual_StrStr_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, class UClass* K2Node_CustomEvent_Attaching_Weapon, class UClass* K2Node_CustomEvent_Attachment_Data, class ABaseItem* CallFunc_GetClassDefaultObject_ReturnValue, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, const struct FSavedLoadout& CallFunc_GetActiveLoadout_ReturnValue, class UWidget* CallFunc_GetDesiredFocusTarget_ReturnValue, enum class ECommonInputType K2Node_CustomEvent_bNewInputType, bool CallFunc_EqualEqual_ByteByte_ReturnValue, class UCommonActivatableWidget* CallFunc_GetActiveWidget_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_CheckOverviewIsActive_True, TScriptInterface<class IReadyOrNotUI_C> K2Node_DynamicCast_AsReady_or_Not_UI, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Not_PreBool_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, class FName K2Node_CustomEvent_CurrentPageID, bool CallFunc_BackPage_Handled, class FName K2Node_Event_PageName, bool Temp_bool_Variable, class FName K2Node_Select_Default, class UClass* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, class UCommonActivatableWidget* CallFunc_BP_AddWidget_ReturnValue, class FName K2Node_ComponentBoundEvent_OptionNameID, bool K2Node_SwitchName_CmpSuccess, class FName K2Node_ComponentBoundEvent_CameraTag, const class FString& K2Node_ComponentBoundEvent_CharacterPose, const class FString& K2Node_ComponentBoundEvent_ButtonID, bool K2Node_SwitchString_CmpSuccess, TArray<class UUserWidget*>& CallFunc_GetAllWidgetsWithInterface_FoundWidgets, class UUserWidget* CallFunc_Array_Get_Item, TScriptInterface<class ILoadoutUI_C> K2Node_DynamicCast_AsLoadout_UI, bool K2Node_DynamicCast_bSuccess_1, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const struct FFocusEvent& K2Node_Event_InFocusEvent, const struct FPointerEvent& K2Node_Event_MouseEvent, class UCommonInputSubsystem* CallFunc_GetLocalPlayerSubsystem_ReturnValue, enum class ECommonInputType CallFunc_GetCurrentInputType_ReturnValue, class FText K2Node_CustomEvent_PresetName, bool K2Node_CustomEvent_NewPresetButton, bool CallFunc_Is_Default_Preset_Default, bool CallFunc_BooleanOR_ReturnValue, class UStandardModal* K2Node_CustomEvent_CallingModal, class UCommonActivatableWidget* CallFunc_GetActiveWidget_ReturnValue_1, class UCommonActivatableWidget* CallFunc_GetActiveWidget_ReturnValue_2, float CallFunc_Delay_Duration_ImplicitCast, float CallFunc_SetActiveCameraByTag_BlendTime_ImplicitCast);
	void OnPresetSelected__DelegateSignature();
	void OnSaveModifiedPresetClicked__DelegateSignature(const class FString& Preset);
	void OnPresetModified__DelegateSignature(bool PresetDirty);
	void OnChangedInput__DelegateSignature(bool UsingGamepad);
	void OnArmorMaterialEquipped__DelegateSignature();
	void OnSidearmWeaponEquipped__DelegateSignature();
	void OnPrimaryWeaponEquipped__DelegateSignature();
};

}


