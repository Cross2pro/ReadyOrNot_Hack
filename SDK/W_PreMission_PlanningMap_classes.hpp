#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x372 (0x852 - 0x4E0)
// WidgetBlueprintGeneratedClass W_PreMission_PlanningMap.W_PreMission_PlanningMap_C
class UW_PreMission_PlanningMap_C : public UMissionPlanWidget
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0x4E0(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                      GamepadCrosshairHover;                             // 0x4E8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_PremissionTablet_Button_C*          btn_Legend;                                        // 0x4F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PremissionTablet_Button_C*          btn_Players;                                       // 0x4F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonLazyImage*                      GamepadCrosshair;                                  // 0x500(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                Icn_GPS;                                           // 0x508(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                             Lbl_GPS;                                           // 0x510(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                       LevelSwitcher;                                     // 0x518(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                          MainCanvas;                                        // 0x520(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                             MapBaseScale;                                      // 0x528(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                          PreviewCanvas;                                     // 0x530(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMissionPlanLinesWidget*               PreviewLineRenderer;                               // 0x538(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                             SwitcherScaleBox;                                  // 0x540(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                             Txt_NoMap;                                         // 0x548(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PreMission_PlanningMap_Level_C*     W_PreMission_PlanningMap_Level;                    // 0x550(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PreMission_Tablet_Legend_C*         W_PreMission_Tablet_Legend;                        // 0x558(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Premission_Tablet_PlayerList_C*     W_Premission_Tablet_PlayerList;                    // 0x560(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMap<int32, class UW_PreMission_Tablet_MapMarker_C*> MarkerMap;                                         // 0x568(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	double                                       DefaultZoomIncrements;                             // 0x5B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MinZoom;                                           // 0x5C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MaxZoom;                                           // 0x5C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       CurrentZoom;                                       // 0x5D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                             LastNormalizedLocation;                            // 0x5D8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Radial_MapMarking_C*                Radial;                                            // 0x5E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                             RadialCoords;                                      // 0x5F0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         RecreateRadial;                                    // 0x600(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         Panning;                                           // 0x601(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         CreatingLine;                                      // 0x602(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         RadialOpen;                                        // 0x603(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_2DCF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UW_PreMission_PlanningMap_Line_C*      PreviewLine_0;                                     // 0x608(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FPlanningLine                         NewLine;                                           // 0x610(0x28)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UWidget*>                       TempLine;                                          // 0x638(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<int32, class UCanvasPanel*>             LineMap;                                           // 0x648(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UW_PreMission_Tablet_MapMarker_C*      RotatingMarker;                                    // 0x698(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                        CurrentFloor;                                      // 0x6A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_2DD1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, struct FLevelFloorData>          Levels;                                            // 0x6A8(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_            OnMapLevelChanged;                                 // 0x6F8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMap<int32, class UW_PreMission_PlanningMap_Level_C*> LevelCanvases;                                     // 0x708(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UCanvasPanel*                          CurrentMarkerCanvas;                               // 0x758(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                       CursorZoomWeight;                                  // 0x760(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                CurrentMission;                                    // 0x768(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TMap<int32, struct FLevelFloor>              OrderedFloors;                                     // 0x778(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                         LegendOpen;                                        // 0x7C8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         EntryPointsOpen;                                   // 0x7C9(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_2DD8[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UW_PreMission_Tablet_EntryPoint_C*     CurrentActiveEntryPointButton;                     // 0x7D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                         IsLeadPlayer;                                      // 0x7D8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_2DD9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UW_PreMission_Tablet_EntryPoint_Selection_C* EntryPointPopout;                                  // 0x7E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                             PanMouseStart;                                     // 0x7E8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                             PanCanvasStart;                                    // 0x7F8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         IsUsingGamepad;                                    // 0x808(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_2DDD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LeftStickPosition;                                 // 0x810(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        CurrentZoomDirection;                              // 0x828(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         IsDrawing;                                         // 0x82C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_2E0C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       ZoomVelocity;                                      // 0x830(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            OnMapInputOptionsChange;                           // 0x838(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                        HoveredLineId;                                     // 0x848(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        HoveredIconId;                                     // 0x84C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         IsLeftMouseButtonDown;                             // 0x850(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         IsPlayerListOpen;                                  // 0x851(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

	static class UClass* StaticClass();
	static class UW_PreMission_PlanningMap_C* GetDefaultObj();

	void BackPage(bool* Handled);
	void GetFocusTarget(class UWidget** Focus);
	void Clamp_Map_Coorinates_to_Screen_View(double InMinusx, double InMinusy, double* X, double* Y, const struct FVector2D& CallFunc_GetWidgetSize_Absolute_ReturnValue, const struct FVector2D& CallFunc_Multiply_Vector2DFloat_ReturnValue, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, double CallFunc_FClamp_ReturnValue, double CallFunc_FClamp_ReturnValue_1);
	void IsGamepadCrosshairHovering(bool* Hovering, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue);
	void GoBackInRadial(bool CallFunc_IsValid_ReturnValue);
	void Set_Hovered_Ids(int32 LineID, int32 IconId, bool WasHovering, class UUMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, class UUMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue_1, bool CallFunc_IsGamepadCrosshairHovering_Hovering, bool CallFunc_IsGamepadCrosshairHovering_Hovering_1, bool CallFunc_NotEqual_BoolBool_ReturnValue);
	void Gamepad_Zoom_Map(double DeltaTime, double CallFunc_Multiply_DoubleDouble_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue);
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent, const struct FEventReply& CallFunc_Unhandled_ReturnValue, const struct FKey& CallFunc_GetKey_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue_1, const struct FEventReply& CallFunc_Handled_ReturnValue);
	void Toggle_Radial(struct FVector2D& Coordinates, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsAnimationPlaying_ReturnValue);
	struct FEventReply OnAnalogValueChanged(const struct FGeometry& MyGeometry, const struct FAnalogInputEvent& InAnalogInputEvent, const struct FEventReply& CallFunc_Unhandled_ReturnValue, float CallFunc_GetAnalogValue_ReturnValue, float CallFunc_GetAnalogValue_ReturnValue_1, const struct FKeyEvent& CallFunc_GetKeyEventFromAnalogInputEvent_ReturnValue, const struct FKey& CallFunc_GetKey_ReturnValue, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, bool CallFunc_EqualEqual_KeyKey_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue_1, bool CallFunc_EqualEqual_KeyKey_ReturnValue_1, const struct FEventReply& CallFunc_Handled_ReturnValue, double CallFunc_MakeVector_Y_ImplicitCast, double CallFunc_MakeVector_X_ImplicitCast);
	struct FEventReply SetLinePart(const struct FEventReply& CallFunc_Handled_ReturnValue, const struct FEventReply& CallFunc_ReleaseMouseCapture_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue);
	void GetGamepadMidPoint(struct FVector2D* Coordinates, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, const struct FVector2D& CallFunc_GetWidgetSize_Absolute_ReturnValue, const struct FVector2D& CallFunc_GetPosition_ReturnValue, const struct FVector2D& CallFunc_Subtract_Vector2DFloat_ReturnValue, const struct FVector2D& CallFunc_Divide_Vector2DVector2D_ReturnValue, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue);
	void Gamepad_Move_Map(double CallFunc_VSize_ReturnValue, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, const struct FVector2D& CallFunc_GetGamepadMidPoint_Coordinates, double CallFunc_GetWorldDeltaSeconds_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_2, const struct FVector2D& CallFunc_GetPosition_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_3, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue_1, double CallFunc_Clamp_Map_Coorinates_to_Screen_View_x, double CallFunc_Clamp_Map_Coorinates_to_Screen_View_y, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue);
	struct FEventReply HandleEntryPointsBorderClicked(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent, const struct FEventReply& CallFunc_Handled_ReturnValue);
	void IsValidEntryPoint(TArray<enum class ECOOPMode>& ExcludedGameModes, bool* IsValid, const class FString& CallFunc_GetSelectedMode_OutMode, bool CallFunc_GetSelectedMode_ReturnValue, enum class ECOOPMode CallFunc_GetCoopModeFromModeName_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);
	void CreateEntryPoints(struct FLevelDataLookupTable& LevelDataLookupTable, FDelegateProperty_& OnEntryPointSelected, class FName PointTag, class FText PointName, const TArray<struct FEntryPoint>& EntryPoints, class UW_PreMission_Tablet_EntryPoint_C* NewEntryPoint);
	void UpdateEntryPointSelection(const struct FEntryPoint& EntryPointData);
	void ChangeFloorByNumber(int32 FloorNumber, const struct FLevelFloorData& FloorData, class UW_PreMission_PlanningMap_Level_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void ZoomOnCursor(const struct FGeometry& Geometry, const struct FPointerEvent& PointerEvent, double PreviousZoom, double NewZoom, double CallFunc_Divide_DoubleDouble_ReturnValue, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, const struct FVector2D& CallFunc_GetPosition_ReturnValue, bool CallFunc_EqualEqual_DoubleDouble_ReturnValue, const struct FVector2D& CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue, const struct FVector2D& CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue_1, const struct FVector2D& CallFunc_AbsoluteToLocal_ReturnValue, const struct FVector2D& CallFunc_GetLocalSize_ReturnValue, const struct FVector2D& CallFunc_Multiply_Vector2DFloat_ReturnValue, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue_1, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue, const struct FVector2D& CallFunc_GetPosition_ReturnValue_1, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue_1, const struct FVector2D& CallFunc_Multiply_Vector2DFloat_ReturnValue_1, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue_2);
	void MissionSetup(const class FString& URL, const struct FLevelDataLookupTable& LevelData, bool CallFunc_Array_IsValidIndex_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_IsEmpty_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, const struct FLevelFloor& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, bool CallFunc_NotEqual_StrStr_ReturnValue, float CallFunc_SetUserSpecifiedScale_InUserSpecifiedScale_ImplicitCast);
	void MarkerRotated(class UW_PreMission_Tablet_MapMarker_C* TriggeringMarker, int32 Floor, double Rotation, const struct FPlanningMarker& K2Node_MakeStruct_PlanningMarker, float K2Node_MakeStruct_Rotation_ImplicitCast);
	void RemovePreviewLine(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UWidget* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void GetCurrentLevelMap(class UW_PreMission_PlanningMap_Level_C** CurrentLevelCanvas, class UW_PreMission_PlanningMap_Level_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void LineStartNodeRightClicked(class UW_OfficerMarker_C* OfficerMarker, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue);
	void CreateMapLevelCanvas(int32 Index, const struct FLevelFloor& LevelData, class UW_PreMission_PlanningMap_Level_C* LevelCanvas, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, class UW_PreMission_PlanningMap_Level_C* CallFunc_Create_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_2, class UPanelSlot* CallFunc_AddChild_ReturnValue, class UWidgetSwitcherSlot* K2Node_DynamicCast_AsWidget_Switcher_Slot, bool K2Node_DynamicCast_bSuccess);
	void ChangeFloorByIndex(int32 Index, const struct FLevelFloorData& FloorData, TArray<int32>& CallFunc_Map_Keys_Keys, TArray<int32>& CallFunc_Map_Keys_Keys_1, bool CallFunc_Array_IsValidIndex_ReturnValue, int32 CallFunc_Array_Get_Item, class UW_PreMission_PlanningMap_Level_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UTexture2D* CallFunc_GetLazyLoadedImage_ReturnValue, int32 CallFunc_Blueprint_GetSizeY_ReturnValue, double CallFunc_Conv_IntToDouble_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue, float CallFunc_SetUserSpecifiedScale_InUserSpecifiedScale_ImplicitCast);
	void RotateMarker(class UW_PreMission_Tablet_MapMarker_C* RotatingMarker, const struct FVector2D& MousePos, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, double CallFunc_BreakVector2D_X_1, double CallFunc_BreakVector2D_Y_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_2, const struct FVector& CallFunc_MakeVector_ReturnValue_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_3, const struct FRotator& CallFunc_FindLookAtRotation_ReturnValue, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, class FText CallFunc_Format_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, double CallFunc_Add_DoubleDouble_A_ImplicitCast);
	void EndMarkerRotation(class UW_PreMission_Tablet_MapMarker_C* TriggeringMarker, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue);
	void StartMarkerRotation(class UW_PreMission_Tablet_MapMarker_C* TriggeringMarker);
	void DrawMarker(int32& MarkerID, struct FPlanningMarker& MarkerData, class UW_PreMission_Tablet_MapMarker_C* Marker);
	void LineStartNodeSelected(class UW_OfficerMarker_C* OfficerMarker);
	void EraseLine(int32 ID, bool CallFunc_Map_Remove_ReturnValue, class UCanvasPanel* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	bool GetVectorOverThreshold(const struct FVector2D& Delta, double Threshold, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, double CallFunc_Abs_ReturnValue, double CallFunc_Abs_ReturnValue_1, double CallFunc_FMax_ReturnValue, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue);
	void GetLineAngle(const struct FVector2D& PointA, const struct FVector2D& PointB, double* Angle, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, double CallFunc_BreakVector2D_X_1, double CallFunc_BreakVector2D_Y_1, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue_1, const struct FRotator& CallFunc_FindLookAtRotation_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, double K2Node_FunctionResult_Angle_ImplicitCast);
	void GetLineLength(const struct FVector2D& PointA, const struct FVector2D& PointB, double* Length, const struct FVector2D& CallFunc_GetWidgetSize_Absolute_ReturnValue, const struct FVector2D& CallFunc_Multiply_Vector2DVector2D_ReturnValue, const struct FVector2D& CallFunc_Multiply_Vector2DVector2D_ReturnValue_1, double CallFunc_Distance2D_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue);
	void UpdatePreviewLine(const struct FVector2D& MousePos, const TArray<struct FVector2D>& PointsCopy, const struct FVector2D& LastPoint, const struct FPlanningLine& K2Node_MakeStruct_PlanningLine, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue);
	void DrawLine(int32 ID, const struct FPlanningLine& LineData, class AReadyOrNotPlayerState* NewLocalVar, class AReadyOrNotPlayerState* LineOwner, class UCanvasPanel* Canvas, class UW_PreMission_PlanningMap_Line_C* Line, bool LastNode, double EndOffset, double StartOffset, const struct FVector2D& PreviousPoint, const struct FVector2D& Coordinates, class UWidget* NodeWidget, bool FirstNode, class UW_PreMission_PlanningMap_Line_C* CallFunc_Create_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_LastIndex_ReturnValue, class AReadyOrNotPlayerState* CallFunc_GetPlayerStateFromPlanningNumber_ReturnValue, const class FString& CallFunc_BP_GetUniqueIdString_ReturnValue, bool CallFunc_IsPlayerBanned_ReturnValue, class UW_OfficerMarker_C* CallFunc_Create_ReturnValue_1, class UW_PreMission_Tablet_PlayerNode_C* CallFunc_Create_ReturnValue_2, int32 Temp_int_Array_Index_Variable, const struct FVector2D& CallFunc_Array_Get_Item, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, const struct FLinearColor& CallFunc_GetPlayerTeamColor_LinearColor, const struct FSlateColor& CallFunc_GetPlayerTeamColor_SlateColor, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, class UCanvasPanelSlot* CallFunc_AddChildToCanvas_ReturnValue, const struct FAnchors& K2Node_MakeStruct_Anchors, int32 Temp_int_Loop_Counter_Variable, const struct FAnchorData& K2Node_MakeStruct_AnchorData, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, double CallFunc_GetLineAngle_Angle, double CallFunc_GetLineLength_Length, const struct FAnchors& K2Node_MakeStruct_Anchors_1, const struct FAnchorData& K2Node_MakeStruct_AnchorData_1, class UCanvasPanelSlot* CallFunc_AddChildToCanvas_ReturnValue_1, class UCanvasPanel* CallFunc_SpawnObject_ReturnValue, const struct FAnchors& K2Node_MakeStruct_Anchors_2, class UCanvasPanelSlot* CallFunc_AddChildToCanvas_ReturnValue_2, const struct FAnchorData& K2Node_MakeStruct_AnchorData_2);
	void AddPreviewLinePoint(const struct FVector2D& Coordinates, const TArray<struct FVector2D>& LinePoints, bool FirstPoint, class UWidget* NodeWidget, const struct FAnchors& K2Node_MakeStruct_Anchors, const struct FAnchorData& K2Node_MakeStruct_AnchorData, double CallFunc_SelectFloat_ReturnValue, class AReadyOrNotPlayerController* CallFunc_GetReadyOrNotPlayerController_ReturnValue, class AReadyOrNotPlayerState* K2Node_DynamicCast_AsReady_or_Not_Player_State, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Array_Add_ReturnValue, const struct FAnchors& K2Node_MakeStruct_Anchors_1, class UCanvasPanelSlot* CallFunc_AddChildToCanvas_ReturnValue, const struct FAnchorData& K2Node_MakeStruct_AnchorData_1, class AReadyOrNotPlayerController* CallFunc_GetReadyOrNotPlayerController_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue_1, class UW_OfficerMarker_C* CallFunc_Create_ReturnValue, class UW_PreMission_Tablet_PlayerNode_C* CallFunc_Create_ReturnValue_1, class UCanvasPanelSlot* CallFunc_AddChildToCanvas_ReturnValue_1, class UW_PreMission_PlanningMap_Line_C* CallFunc_Create_ReturnValue_2, int32 CallFunc_Array_Add_ReturnValue_2);
	struct FEventReply OnMouseMove(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent, const struct FVector2D& CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FEventReply& CallFunc_Unhandled_ReturnValue, const struct FGeometry& CallFunc_GetCachedGeometry_ReturnValue, const struct FVector2D& CallFunc_GetNormalizedClick_ReturnValue, const struct FVector2D& CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_1, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue, const struct FEventReply& CallFunc_Handled_ReturnValue, const struct FVector2D& CallFunc_Add_Vector2DVector2D_ReturnValue, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, double CallFunc_Clamp_Map_Coorinates_to_Screen_View_x, double CallFunc_Clamp_Map_Coorinates_to_Screen_View_y, double CallFunc_Distance2D_ReturnValue, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue);
	struct FEventReply OnMouseWheel(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent, const struct FEventReply& CallFunc_Unhandled_ReturnValue, float CallFunc_PointerEvent_GetWheelDelta_ReturnValue, const struct FEventReply& CallFunc_Handled_ReturnValue, bool CallFunc_Less_DoubleDouble_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, double CallFunc_Greater_DoubleDouble_A_ImplicitCast, double CallFunc_Less_DoubleDouble_A_ImplicitCast);
	struct FEventReply OnMouseButtonUp(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent, const struct FEventReply& CallFunc_Handled_ReturnValue, const struct FVector2D& CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue, const struct FKey& CallFunc_PointerEvent_GetEffectingButton_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue_1, const struct FGeometry& CallFunc_GetCachedGeometry_ReturnValue, const struct FVector2D& CallFunc_GetNormalizedClick_ReturnValue, const struct FEventReply& CallFunc_Handled_ReturnValue_1, const struct FEventReply& CallFunc_Handled_ReturnValue_2, const struct FEventReply& CallFunc_ReleaseMouseCapture_ReturnValue, const struct FEventReply& CallFunc_Handled_ReturnValue_3, int32 CallFunc_Array_Length_ReturnValue, const struct FEventReply& CallFunc_Unhandled_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent, const struct FKey& CallFunc_PointerEvent_GetEffectingButton_ReturnValue, const struct FVector2D& CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, const struct FEventReply& CallFunc_Unhandled_ReturnValue, const struct FVector2D& CallFunc_GetPosition_ReturnValue);
	void RadialMarkerSelected(class FName CategoryName, class FName MarkerName, const struct FPlanningMarker& K2Node_MakeStruct_PlanningMarker);
	void CloseRadial(bool CallFunc_IsValid_ReturnValue);
	void RadialCollapsed(class UCommonInputSubsystem* CallFunc_GetLocalPlayerSubsystem_ReturnValue, enum class ECommonInputType CallFunc_GetCurrentInputType_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void OpenRadial(const struct FVector2D& CursorPosition, bool CallFunc_IsValid_ReturnValue, class UW_Radial_MapMarking_C* CallFunc_Create_ReturnValue, const struct FGeometry& CallFunc_GetCachedGeometry_ReturnValue, const struct FVector2D& CallFunc_GetLocalSize_ReturnValue, const struct FGeometry& CallFunc_GetCachedGeometry_ReturnValue_1, const struct FVector2D& CallFunc_AbsoluteToLocal_ReturnValue, const struct FVector2D& CallFunc_GetLocalSize_ReturnValue_1, const struct FVector2D& CallFunc_Divide_Vector2DVector2D_ReturnValue, const struct FVector2D& CallFunc_AbsoluteToLocal_ReturnValue_1, const struct FVector2D& CallFunc_Divide_Vector2DVector2D_ReturnValue_1, class APlayerController* CallFunc_GetPlayerController_ReturnValue, float CallFunc_GetMousePosition_LocationX, float CallFunc_GetMousePosition_LocationY, bool CallFunc_GetMousePosition_ReturnValue, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, const struct FAnchors& K2Node_MakeStruct_Anchors, const struct FAnchorData& K2Node_MakeStruct_AnchorData, class UCanvasPanelSlot* CallFunc_AddChildToCanvas_ReturnValue, double CallFunc_MakeVector2D_X_ImplicitCast, double CallFunc_MakeVector2D_Y_ImplicitCast);
	void Zoom(const struct FGeometry& Geometry, const struct FPointerEvent& PointerEvent, bool ZoomOnCursor, bool ZoomIn, double ZoomIncrements, double CurrentZoomIncrements, double PreviousZoom, bool CallFunc_NotEqual_DoubleDouble_ReturnValue, int32 CallFunc_SelectInt_ReturnValue, double CallFunc_Conv_IntToDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, const struct FVector2D& CallFunc_GetViewportSize_ReturnValue, const struct FVector2D& CallFunc_GetMousePositionOnViewport_ReturnValue, const struct FVector2D& CallFunc_Divide_Vector2DVector2D_ReturnValue, const struct FVector2D& CallFunc_Subtract_Vector2DFloat_ReturnValue, const struct FVector2D& CallFunc_Multiply_Vector2DVector2D_ReturnValue, const struct FVector2D& CallFunc_Multiply_Vector2DFloat_ReturnValue, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue, const struct FVector2D& CallFunc_GetPosition_ReturnValue, double CallFunc_FClamp_ReturnValue, const struct FVector2D& CallFunc_Multiply_Vector2DFloat_ReturnValue_1, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue, float CallFunc_SetUserSpecifiedScale_InUserSpecifiedScale_ImplicitCast);
	struct FEventReply OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent, const struct FKey& CallFunc_GetKey_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue_1, bool CallFunc_EqualEqual_KeyKey_ReturnValue_2, bool CallFunc_EqualEqual_KeyKey_ReturnValue_3, bool CallFunc_EqualEqual_KeyKey_ReturnValue_4, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue_5, bool CallFunc_EqualEqual_KeyKey_ReturnValue_6, bool CallFunc_EqualEqual_KeyKey_ReturnValue_7, bool CallFunc_EqualEqual_KeyKey_ReturnValue_8, bool CallFunc_EqualEqual_KeyKey_ReturnValue_9, bool CallFunc_EqualEqual_KeyKey_ReturnValue_10, class UWidget* CallFunc_GetActiveWidget_ReturnValue, class UW_PreMission_PlanningMap_Level_C* K2Node_DynamicCast_AsW_Pre_Mission_Planning_Map_Level, bool K2Node_DynamicCast_bSuccess, class UW_PreMission_PlanningMap_Level_C* K2Node_DynamicCast_AsW_Pre_Mission_Planning_Map_Level_1, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_NotEqual_IntInt_ReturnValue_1, const struct FEventReply& CallFunc_Unhandled_ReturnValue, const struct FVector2D& CallFunc_GetWidgetSize_Absolute_ReturnValue, const struct FVector2D& CallFunc_Multiply_Vector2DVector2D_ReturnValue, const struct FEventReply& CallFunc_Handled_ReturnValue, const struct FEventReply& CallFunc_SetLinePart_ReturnValue, const struct FVector2D& CallFunc_GetGamepadMidPoint_Coordinates, const struct FEventReply& CallFunc_Handled_ReturnValue_1, const struct FEventReply& CallFunc_Unhandled_ReturnValue_1, const struct FEventReply& CallFunc_Handled_ReturnValue_2);
	void LineDrawn(int32 LineID, class UCanvasPanel* LineCanvas);
	void Reveal(double Delay);
	void OnEntryPointSelected(class UW_PreMission_Tablet_EntryPoint_C* Clicked);
	void BndEvt__W_PreMission_PlanningMap_btn_Legend_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(class UW_PremissionTablet_Button_C* TriggeringButton);
	void PreConstruct(bool IsDesignTime);
	void MapMarkerDrawn(int32 MarkerID, class UW_PreMission_Tablet_MapMarker_C* Marker);
	void Construct();
	void ChangePage(class FName PageName);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void ToggleLegend();
	void SetInputMode(bool IsGamepad);
	void OnMarkerAdded(int32 ID, struct FPlanningMarker& Marker);
	void ToggleEntrySelection();
	void MissionChanged(const class FString& MissionURL, const struct FLevelDataLookupTable& LevelData);
	void Hide(double Delay, bool Collapse);
	void OnEntryPointChanged(const struct FEntryPoint& NewEntryPoint);
	void OnLeftClickUp(struct FGeometry& InGeometry, struct FPointerEvent& InMouseEvent);
	void ScaleLineWeightByZoom(double CurrentZoom);
	void OnLineRemoved(int32 ID);
	void OnLineAdded(int32 ID, struct FPlanningLine& Line);
	void OnMarkerRemoved(int32 ID);
	void OnMissionChanged(const class FString& URL, struct FLevelDataLookupTable& LevelData);
	void OnFocusLost(const struct FFocusEvent& InFocusEvent);
	void OnInputChange(enum class ECommonInputType bNewInputType);
	void BndEvt__W_PreMission_PlanningMap_btn_Players_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature(class UW_PremissionTablet_Button_C* TriggeringButton);
	void TogglePlayerList();
	void ExecuteUbergraph_W_PreMission_PlanningMap(int32 EntryPoint, bool CallFunc_IsMultiplayer_ReturnValue, class UW_PremissionTablet_Button_C* K2Node_ComponentBoundEvent_TriggeringButton_1, bool CallFunc_Toggle_IsOpen, bool K2Node_Event_IsDesignTime, int32 K2Node_CustomEvent_MarkerID, class UW_PreMission_Tablet_MapMarker_C* K2Node_CustomEvent_Marker, class UW_PreMission_Tablet_EntryPoint_C* K2Node_CustomEvent_Clicked, class FName K2Node_Event_PageName, const struct FGeometry& K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, bool K2Node_Event_IsGamepad, int32 K2Node_Event_ID_3, const struct FPlanningMarker& K2Node_Event_Marker, double K2Node_Event_Delay_1, const class FString& K2Node_Event_MissionURL, const struct FLevelDataLookupTable& K2Node_Event_LevelData_1, double K2Node_Event_Delay, bool K2Node_Event_Collapse, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, const struct FEntryPoint& K2Node_Event_NewEntryPoint, bool CallFunc_HasAuthority_ReturnValue, int32 K2Node_CustomEvent_LineID, class UCanvasPanel* K2Node_CustomEvent_LineCanvas, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, class UCommonInputSubsystem* CallFunc_GetLocalPlayerSubsystem_ReturnValue, enum class ECommonInputType CallFunc_GetCurrentInputType_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, const struct FGeometry& K2Node_Event_InGeometry, const struct FPointerEvent& K2Node_Event_InMouseEvent, double K2Node_Event_CurrentZoom, int32 K2Node_Event_ID_2, int32 K2Node_Event_ID_1, const struct FPlanningLine& K2Node_Event_Line, int32 K2Node_Event_ID, const class FString& K2Node_Event_URL, const struct FLevelDataLookupTable& K2Node_Event_LevelData, const struct FFocusEvent& K2Node_Event_InFocusEvent, class UW_PreMission_PlanningMap_Level_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, class UW_PreMission_PlanningMap_Level_C* CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, class UW_PreMission_Tablet_MapMarker_C* CallFunc_Map_Find_Value_2, bool CallFunc_Map_Find_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_1, enum class ECommonInputType K2Node_CustomEvent_bNewInputType, bool CallFunc_EqualEqual_ByteByte_ReturnValue, const struct FMissionPlanLineColors& CallFunc_GetPlanLineColors_Colors, class UW_PremissionTablet_Button_C* K2Node_ComponentBoundEvent_TriggeringButton, bool CallFunc_Toggle_IsOpen_1, bool CallFunc_Toggle_IsOpen_2, bool CallFunc_IsMultiplayer_ReturnValue_1, float CallFunc_SetUserSpecifiedScale_InUserSpecifiedScale_ImplicitCast, double CallFunc_Gamepad_Zoom_Map_DeltaTime_ImplicitCast);
	void OnMapInputOptionsChange__DelegateSignature();
	void OnMapLevelChanged__DelegateSignature(const class FString& MissionURL, const struct FLevelFloor& FloorData);
};

}


